--- TODO ---
- Check, whether we are really following our lists (markup, abbreviations), consistently.
  - Also check, whether we introduce all abbreviations, properly.
- Second check figure placement and size.
- Check final version for hyphenation problems.

I've tried to write the remainder of these notes in a way that we can simply
attach it to the revision, and send it to the editors. Please check wording / spelling, etc.


--- Requests that we have addressed ---
o In all cases, text/tables/figures\equations must fit within the normal
textwidth of the manuscript. 
	o Pages: 1,32

o In itemized/bullet lists please capitalize the first word of the item. 

o All code comments (#) should be removed and incorporated within the text
of the manuscript.

o Figure placement (i.e. placement of floating objects): 
  The {figure} or {table} environment should be close to the first
  reference in the manuscript. It should first use the "t!" option for
  placement. If a figure then ends up before the start of its (sub)section,
  "t!" should be changed to "b!".  e.g., {figure}[b!].

References
  - Java (not: JAVA, java)

--- Requests that we have addressed, but questions remain ---

Code:
Please include a standalone replication script of all code/examples
used within the manuscript

We now provide
- An R script to be run inside an RKWard session, which will replicate the
examples from Sections 3, 4, and 5. Note that since most of these examples
are concerned with interactive GUI elements, the script itself is interactive,
and will prompt the user to perform certain actions, manually.
- A sample data file used in Section 5. Since one example is concerned with
importing this data file, the data cannot simply be inlined in the R script.
- A set of files to replicate the plugin example in Section 6. These files
cannot meaningfully be integrated into a standalone script.
- A file README.txt with further instructions on using the examples.

The scripts and files are only meaningful when used inside an RKWard session,
not in a plain R session.

Source code for RKWard 0.5.4 can be obtained from
http://sourceforge.net/projects/rkward/files/Current_Stable_Releases/rkward-0.5.4.tar.gz/download .

Manuscript:
o As a reminder, please make sure that:
  - \proglang, \pkg and \code have been used for highlighting throughout
the paper (including titles and references), except where explicitly escaped.

We have checked our usage of these macros, and esp. added appropriate highlighting
in titles and references. Note that for several terms we are not entirely sure,
whether it is considered appropriate to use the \proglang macro or not. We have added
a corresponding list near the end of this text file.

o Abbreviation expansions should only be introduced in the abstract if they
are needed again within the abstract. If an expansion is introduced within
the abstract it needs to be introduced again within the manuscript the
first time it is used.
	o  KDE

We have removed the abbreviation "IDE" in the abstract. We have decided
to consider KDE (and several other acronyms) as a proper name, and we do not
provide an expansion, deliberately (see below).

o Abbreviations should be spelled in upper-case letters without additional
formatting (i.e., without periods, without small caps, italics, etc.). All
abbreviations should be introduced with their expansion where the expansion
should NOT be capitalized. (Exceptions are, of course, when the expansion
contains proper names or the first word is the first word of a sentence.)
Examples would include "support vector machine (SVM)" or "MCMC (Markov
chain Monte Carlo)" etc.
	o please check all abbreviations

We have checked our usage of abbreviations and their introduction, and have
corrected several occurences. For several terms which are derived from
abbreviations, can be read as acronyms, or contain portions of abbreviations or
acronyms, we have decided to treat these as proper names, which are not
introduced with an expansion. A list of terms that we have / have not treated as
an abbreviation is included near the end of this text file. Naturally we will
be happy to adjust our treatment of these terms per your request.

--- Items that we are not sure about ---
---- Use of the \proglang macro ----
In several cases, we are not entirely sure, whether the use of the \proglang macro is called for or not.
The macro documentation says:

% \DescribeMacro{\proglang}
% This should be used for typesetting the names of programming
% languages, e.g., |\proglang{Java}|, |\proglang{C++}| or |\proglang{R}|.
% This applies also to programmable environments which also have a GUI
% like |\proglang{SAS}|, |\proglang{Stata}| or |\proglang{S-PLUS}|.

However, for some cases, it appears debatable, whether they consitute a "programmable environment".
Below is a list of applicable terms that we decided to mark up, or not to mark up with the
\proglang macro:

----- We have used the \proglang macro on these items -----
* R, S, ECMAScript, JavaScript, Java, C++, Tcl/Tk, SPSS, Stata: We consider these clear cases.
* Rgui.exe, Rgui.app: As the "official" R GUIs, we decided to treat these the same as
          R, i.e. to use the \proglang macro.

----- We have not used the \proglang macro on these items -----
* PNG, JPEG: Binary file formats.
* TSV, CSV: Text based file formats. We did not consider these as "programmable".
* HTML, XML: We are not entirely sure, whether these markup languages are to be considered
          "programmable", but have decided not to use the \proglang macro for these.
* SVG, ODF: These are XML-based, and, thus, arguably "programmable". However, we decided not
          to use the \proglang macro, here, for consistency with the other file
          storage formats.
* PDF:    Although based on the PostScript programming language, we decided not to use
          the \proglang macro in this case, for consistency with other file storage
          formats.
* R Commander: For similar reasons, we marked up only the "R" in R Commander with the
          \proglang macro (the corresponding package Rcmdr is marked up using the \pkg macro).
* XEmbed: A protocol. Here we interpreted the term to name a technology similar to "repartening".

---- Use of the \pkg macro
I addition to the names of R packages, we have marked software applications and libraries with the
\pkg marco. We did so after observing similar highlighting in published articles in JSS, such as
http://www.jstatsoft.org/v25/s01/paper, although we remain unsure, whether this usage of the \pkg
macro is called for or not:
* RKWard: The program presented in this article is a GUI and IDE to R. As such, it provides
          full access to R's programmability. It also features extensibility by plugins. For
          the purpose of markup, we decided to consider it as a pure GUI, however, rather than
          a complete environment. We are not sure, whether or not this is in line with the
          intended usage of the \proglang and \pkg macros.
* Red-R:  Same reasoning as for "RKWard".
* X11:    Used as the name of the corresponding platform, rather than the name of the library
          in the context of this article.
* Qt:     (C++-based) programming library.
* KDE:    In the context of this article, "KDE" is primarily used to name the KDE programming
          libraries.
* KWord, Kate, KatePart: KDE software.

---- Expansion of acronyms or partial abbreviations ----
We have decided to treat the following items as proper names that do not need to be
introduced in their expanded form, although they could be read as abbreviations, or
contain abbreviated portions, or portions that were originally derived from abbreviations.
* KDE
* Tcl/Tk
* ECMAScript
* Mac OS X
* PHP
* GNU
* Debian
* OpenSuse
* SEXP
* XMLGUI
* KWord
* KPart
* SPSS
* Stata
* Kate
* JPEG
* UNIX
* HTML
* XML
Further, we refrained from expanding the names of R packages such as "JGR", and any terms
marked up as \code.

The following items are treated as abbreviations, and are introduced in the
article (page number of introduction is given in parentheses):
* GUI (1 & 2)
* IDE (2)
* GPL (3)
* GFDL (3)
* TDI (6)
* CSV (10)
* HTML (13)
* PNG (13)
* SVG (13)
* CRAN (14)
* PDF (14-15)
* API (20)
* ECDF (25)
